name: Bootstrap Flux on GKE Cluster

# Custom run name for better identification in GitHub UI
run-name: "Flux Bootstrap: ${{ github.event.client_payload.involvedObject.name || 'Unknown Cluster' }} ðŸš€"

on:
  repository_dispatch:
    types: [gke-cluster-ready]  # Updated to match the new event type

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  bootstrap-flux:
    name: Bootstrap Flux - ${{ github.event.client_payload.involvedObject.name }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract cluster info from payload
      id: cluster-info
      run: |
        # Get the involved object details from Flux event
        INVOLVED_OBJECT="${{ github.event.client_payload.involvedObject.name }}"
        NAMESPACE="${{ github.event.client_payload.involvedObject.namespace }}"
        MESSAGE="${{ github.event.client_payload.message }}"

        echo "Involved Object: $INVOLVED_OBJECT"
        echo "Namespace: $NAMESPACE"
        echo "Message: $MESSAGE"

        # Extract cluster info from the resource name or message
        # Assuming your GKECluster resources are named descriptively
        if [[ "$INVOLVED_OBJECT" == *"control-plane"* ]] || [[ "$MESSAGE" == *"control-plane"* ]]; then
          CLUSTER_TYPE="control-plane"
          CLUSTER_NAME="gke-control-plane-cluster"
        elif [[ "$INVOLVED_OBJECT" == *"apps-dev"* ]] || [[ "$MESSAGE" == *"apps-dev"* ]]; then
          CLUSTER_TYPE="apps-dev"
          CLUSTER_NAME="gke-apps-dev-cluster"
        else
          echo "Could not determine cluster type from: $INVOLVED_OBJECT or $MESSAGE"
          exit 1
        fi

        # Set outputs
        echo "cluster_name=$CLUSTER_NAME" >> $GITHUB_OUTPUT
        echo "cluster_type=$CLUSTER_TYPE" >> $GITHUB_OUTPUT
        echo "region=australia-southeast1" >> $GITHUB_OUTPUT

        # For better logging
        echo "Detected cluster: $CLUSTER_NAME (type: $CLUSTER_TYPE)"

    - name: Setup Flux CLI
      uses: fluxcd/flux2/action@main

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Get project info from auth context
      id: project-info
      run: |
        # Extract project ID from the auth context
        PROJECT_ID=$(gcloud config get-value project)
        echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
        echo "Detected project: $PROJECT_ID"

    - name: Get GKE credentials
      id: get-credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ steps.cluster-info.outputs.cluster_name }}
        location: ${{ steps.cluster-info.outputs.region }}
        project_id: ${{ steps.project-info.outputs.project_id }}

    - name: Create cluster config
      run: |
        # Create the namespace if it doesn't already exist
        kubectl get namespace flux-system >/dev/null 2>&1 || kubectl create namespace flux-system

        # Always create or update the ConfigMap
        kubectl create configmap cluster-config -n flux-system \
          --from-literal=REGION="${{ steps.cluster-info.outputs.region }}" \
          --from-literal=CLUSTER_NAME="${{ steps.cluster-info.outputs.cluster_name }}" \
          --from-literal=CLUSTER_TYPE="${{ steps.cluster-info.outputs.cluster_type }}" \
          --from-literal=PROJECT_ID="${{ steps.project-info.outputs.project_id }}" \
          --from-literal=REPO_OWNER="${{ github.repository_owner }}" \
          --from-literal=REPO_NAME="${{ github.event.repository.name }}" \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Run Flux pre-installation checks
      run: |
        flux check --pre

    - name: Bootstrap Flux
      id: bootstrap
      env:
        GITHUB_TOKEN: ${{ secrets.FLUX_GITHUB_TOKEN }}
      run: |
        CLUSTER_TYPE="${{ steps.cluster-info.outputs.cluster_type }}"

        flux bootstrap github \
          --owner="${{ github.repository_owner }}" \
          --repository="${{ github.event.repository.name }}" \
          --branch="${{ github.ref_name }}" \
          --path="./clusters/${CLUSTER_TYPE}" \
          --token-auth \
          --network-policy=true \
          --components-extra=image-reflector-controller,image-automation-controller \
          --timeout=10m0s

    - name: Run Flux installation checks
      run: |
        flux check
        echo "Flux bootstrap completed for cluster: ${{ steps.cluster-info.outputs.cluster_name }}"
        echo "Project: ${{ steps.project-info.outputs.project_id }}"
        echo "Region: ${{ steps.cluster-info.outputs.region }}"
