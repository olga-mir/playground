apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: gke-cluster-composition
  labels:
    provider: gcp
    service: gke
  annotations:
    crossplane.io/revision: "v2"
spec:
  compositeTypeRef:
    apiVersion: platform.tornado-demo.io/v1alpha1
    kind: GKECluster

  mode: Pipeline
  pipeline:
  - step: cluster-resources
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          ---
          # GKE Cluster
          apiVersion: container.gcp-beta.upbound.io/v1beta2
          kind: Cluster
          metadata:
            name: {{ .observed.composite.resource.spec.parameters.clusterName }}
            annotations:
              crossplane.io/external-name: {{ .observed.composite.resource.spec.parameters.clusterName }}
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}
              crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}
          spec:
            providerConfigRef:
              name: crossplane-provider-gcp
            forProvider:
              network: "projects/{{ .observed.composite.resource.spec.parameters.projectId }}/global/networks/{{ .observed.composite.resource.spec.parameters.vpcName }}"
              subnetwork: "projects/{{ .observed.composite.resource.spec.parameters.projectId }}/regions/{{ .observed.composite.resource.spec.parameters.region }}/subnetworks/{{ .observed.composite.resource.spec.parameters.subnetName }}"
              location: "{{ .observed.composite.resource.spec.parameters.zone }}"
              workloadIdentityConfig:
                workloadPool: "{{ .observed.composite.resource.spec.parameters.projectId }}.svc.id.goog"
              initialNodeCount: 1
              removeDefaultNodePool: true
              gatewayApiConfig:
                channel: CHANNEL_STANDARD
              enableAutopilot: false
              releaseChannel:
                channel: RAPID
            writeConnectionSecretToRef:
              namespace: crossplane-system
              name: {{ .observed.composite.resource.spec.parameters.clusterName }}-kubeconfig
          ---
          # GKE Node Pool
          apiVersion: container.gcp-beta.upbound.io/v1beta2
          kind: NodePool
          metadata:
            name: {{ .observed.composite.resource.spec.parameters.clusterName }}-pool
            annotations:
              crossplane.io/external-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-pool
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-pool
              crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-pool
          spec:
            forProvider:
              clusterRef:
                name: {{ .observed.composite.resource.spec.parameters.clusterName }}
              maxPodsPerNode: 32
              nodeConfig:
                spot: true
                machineType: {{ .observed.composite.resource.spec.parameters.machineType }}
                diskSizeGb: 50
              autoscaling:
                minNodeCount: {{ .observed.composite.resource.spec.parameters.minNodes }}
                maxNodeCount: {{ .observed.composite.resource.spec.parameters.maxNodes }}
              management:
                autoRepair: true
                autoUpgrade: true
            providerConfigRef:
              name: crossplane-provider-gcp
          {{ if eq .observed.composite.resource.spec.parameters.clusterType "mgmt" }}
          ---
          # Kubernetes ProviderConfig for this cluster
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: ProviderConfig
          metadata:
            name: {{ .observed.composite.resource.spec.parameters.clusterName }}-k8s-provider
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-k8s-provider
              crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-k8s-provider
              crossplane.io/depends-on: {{ .observed.composite.resource.spec.parameters.clusterName }}
          spec:
            credentials:
              source: Secret
              secretRef:
                namespace: crossplane-system
                name: {{ .observed.composite.resource.spec.parameters.clusterName }}-kubeconfig
                key: kubeconfig
          ---
          # Helm ProviderConfig for this cluster
          apiVersion: helm.crossplane.io/v1beta1
          kind: ProviderConfig
          metadata:
            name: {{ .observed.composite.resource.spec.parameters.clusterName }}-helm-provider
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-helm-provider
              crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-helm-provider
              crossplane.io/depends-on: {{ .observed.composite.resource.spec.parameters.clusterName }}-k8s-provider
          spec:
            credentials:
              source: Secret
              secretRef:
                namespace: crossplane-system
                name: {{ .observed.composite.resource.spec.parameters.clusterName }}-kubeconfig
                key: kubeconfig
            identity:
              type: GoogleApplicationCredentials
              source: Secret
              secretRef:
                namespace: crossplane-system
                name: gcp-creds
                key: credentials
          {{ end }}

# ArgoCD step removed - migrated to FluxCD

  - step: crossplane-resources
    functionRef:
      name: function-go-templating
    input:
      apiVersion: gotemplating.fn.crossplane.io/v1beta1
      kind: GoTemplate
      source: Inline
      inline:
        template: |
          {{ if and (.observed.composite.resource.spec.parameters.crossplane.enabled) (eq .observed.composite.resource.spec.parameters.clusterType "mgmt") }}
          ---
          # Crossplane Helm Release
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            name: {{ .observed.composite.resource.spec.parameters.clusterName }}-crossplane
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-crossplane
              crossplane.io/composition-resource-name: {{ .observed.composite.resource.spec.parameters.clusterName }}-crossplane
              crossplane.io/depends-on: {{ .observed.composite.resource.spec.parameters.clusterName }}-helm-provider
          spec:
            providerConfigRef:
              name: {{ .observed.composite.resource.spec.parameters.clusterName }}-helm-provider
            forProvider:
              namespace: crossplane-system
              chart:
                name: crossplane
                url: https://charts.crossplane.io/preview/crossplane-{{ .observed.composite.resource.spec.parameters.crossplane.version }}.tgz
                version: {{ .observed.composite.resource.spec.parameters.crossplane.version }}
              values:
                resourcesCrossplane:
                  limits:
                    cpu: 100m
                    memory: 512Mi
                  requests:
                    cpu: 100m
                    memory: 256Mi
          ---
          # GCP Beta Container Provider
          apiVersion: pkg.crossplane.io/v1
          kind: Provider
          metadata:
            name: provider-gcp-beta-container
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: provider-gcp-beta-container
              crossplane.io/composition-resource-name: provider-gcp-beta-container
          spec:
            package: xpkg.upbound.io/upbound/provider-gcp-beta-container:v0.5.1
          ---
          # Helm Provider
          apiVersion: pkg.crossplane.io/v1
          kind: Provider
          metadata:
            name: provider-helm
            annotations:
              gotemplating.fn.crossplane.io/composition-resource-name: provider-helm
              crossplane.io/composition-resource-name: provider-helm
          spec:
            package: xpkg.upbound.io/crossplane-contrib/provider-helm:v0.21.0
          {{ end }}

# GitHub notification step removed - causing provider issues

  - step: ready
    functionRef:
      name: function-auto-ready

