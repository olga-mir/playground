version: "3"

tasks:
  kind-create-sandbox:
    desc: "Create a vanilla Kind cluster (latest k8s, 2 nodes, name 'sandbox-cluster')"
    cmds:
      - |
        cat <<EOF | kind create cluster --name sandbox-cluster --config=-
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
        - role: worker
        EOF

  kind-delete-sandbox:
    desc: "Delete the 'sandbox-cluster' Kind cluster"
    cmds:
      - kind delete cluster --name sandbox-cluster

  crossplane-trace:
    desc: "Trace Crossplane resources"
    cmds:
      - crossplane beta trace valuestreamlandingzones -f "{{.TASKFILE_DIR}}/teams/team-alpha/landing-zone-claim.yaml" -n team-alpha-tenant

  gke-cluster-status:
    desc: "Debug composed resources for a GKE cluster (usage: task debug-cluster CLUSTER=control-plane-cluster)"
    vars:
      CLUSTER: '{{default "control-plane-cluster" .CLUSTER}}'
      CONTEXT: '{{default "kind-kind-test-cluster" .CONTEXT}}'
    cmds:
      - echo "=== GKE Cluster Status ==="
      - kubectl --context={{.CONTEXT}} get gkeclusters.platform.tornado-demo.io {{.CLUSTER}} -o wide
      - echo ""
      - echo "=== Quick Status Check ==="
      - kubectl --context={{.CONTEXT}} get clusters.container.gcp-beta.upbound.io -o wide 2>/dev/null || echo "No clusters found"
      - kubectl --context={{.CONTEXT}} get nodepools.container.gcp-beta.upbound.io -o wide 2>/dev/null || echo "No nodepools found"
      - kubectl --context={{.CONTEXT}} get releases.helm.crossplane.io -o wide 2>/dev/null || echo "No helm releases found"
      - kubectl --context={{.CONTEXT}} get providerconfigs.helm.crossplane.io -o wide 2>/dev/null || echo "No helm provider configs found"
      - kubectl --context={{.CONTEXT}} get providerconfigs.kubernetes.crossplane.io -o wide 2>/dev/null || echo "No k8s provider configs found"
      - kubectl --context={{.CONTEXT}} get providers.pkg.crossplane.io -o wide 2>/dev/null || echo "No providers found"

  helper-commands:
    desc: "Collection of troubleshooting commands"
    cmds:
      - echo "kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.3.0/experimental-install.yaml"
      - echo "helm template test oci://ghcr.io/kagent-dev/kagent/helm/kagent --namespace kagent --values test-values.yaml"
